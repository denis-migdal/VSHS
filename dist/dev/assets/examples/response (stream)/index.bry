#  /response (stream)/GET.bry

from browser import self
from browser import aio

async def callback(writer):

    try:
        def onClose():
            print("connexion closed")

        writer.closed["finally"](onClose)

        for i in range(0,3):
            await writer.write(f"{i}\n")

        writer.close()

    except Exception as e:
        print(f"Error: {e}")
        writer.abort();

async def RequestHandler(request, _):
    
    t = self.TransformStream.new()

    aio.run( callback(t.writable.getWriter()) )

    encoder = self.TextEncoderStream.new()
    stream = t.readable.pipeThrough(encoder)
    return self.Response.new(stream);