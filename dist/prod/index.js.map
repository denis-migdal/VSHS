{"version":3,"file":"index.js","mappings":"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","sources":["webpack://VSHS/./src/Fake/EventSource.ts","webpack://VSHS/./src/Fake/WebSocket.ts","webpack://VSHS/webpack/bootstrap","webpack://VSHS/webpack/runtime/define property getters","webpack://VSHS/webpack/runtime/hasOwnProperty shorthand","webpack://VSHS/webpack/runtime/make namespace object","webpack://VSHS/./src/index.ts"],"sourcesContent":["const EventSource = globalThis.EventSource;\n\nexport function getFakeEventSource(use_server: string|null) {\n\n    if( use_server )\n        return class EventSourceServer extends EventSource {\n            constructor(url: string) {\n                super(`${use_server}${url}`);\n            }\n        }\n\n    return EventSourceFake;\n}\n\n// @ts-ignore\nclass EventSourceFake extends EventTarget implements EventSource {\n    constructor(url: string) {\n        super();\n        this.url = url;\n\n        globalThis.fetch(url).then( async (response) => {\n\n            this.readyState = this.OPEN;\n            this.dispatchEvent( new Event(\"open\") );\n\n            const reader = response.body!.pipeThrough(new TextDecoderStream).getReader();\n\n            let buffer = \"\";\n            let chunk = await reader.read();\n\n            while( ! chunk.done ) {\n\n                buffer += chunk.value!;\n\n                let pos = buffer.indexOf(\"\\n\\n\");\n                while( pos !== -1) {\n\n                    let event = buffer.slice(0, pos);\n\n                    const data = Object.fromEntries( event.split(\"\\n\").map( l => l.split(\": \") ) );\n\n                    data.event ??= \"message\";\n\n                    this.dispatchEvent( new MessageEvent(data.event, {data: data.data}) )\n\n                    buffer = buffer.slice(pos + 2);\n                    pos = buffer.indexOf(\"\\n\\n\");\n                }\n\n                chunk = await reader.read();\n            }\n        });\n    }\n    onerror  : ((this: EventSource, ev: Event       ) => any) | null = null;\n    onmessage: ((this: EventSource, ev: MessageEvent) => any) | null = null;\n    onopen   : ((this: EventSource, ev: Event       ) => any) | null = null;\n    close(): void {\n        this.readyState = this.CLOSED;\n    }\n\n    readyState: number = 0;\n\n    readonly CONNECTING = 0;\n    readonly OPEN = 1;\n    readonly CLOSED = 2;\n\n    // not implemented\n    url: string;\n    withCredentials: boolean = false;\n}","const WebSocket = globalThis.WebSocket;\n\nexport function getFakeWebSocket(use_server: string|null) {\n\n    if( use_server )\n        return class WebSocketServer extends WebSocket {\n            constructor(url: string) {\n                super(`${use_server}${url}`);\n            }\n        }\n\n    return WebSocketFake;\n}\n\ndeclare global {\n    interface Deno {\n        upgradeWebSocket(req: Request): {\n            socket: WebSocketFake,\n            response: Response\n        };\n    }\n}\n\n// @ts-ignore\nglobalThis.Deno = {\n    upgradeWebSocket: function(request: Request) {\n\n        const socket   = new WebSocketFake(null);\n        const response = new Response();\n\n        (response as any).websocket = socket;\n\n        return {\n            socket,\n            response\n        }\n    }\n}\n\n//TODO implemente Deno.upgrade => return fake Response + ServerWebSocket...\n\nclass WebSocketFake extends EventTarget implements WebSocket {\n\n    other: WebSocketFake|null = null;\n\n    constructor(url: string|null) {\n        super();\n\n        if( url === null)\n            return;\n\n        this.url = url;\n\n        globalThis.fetch(url).then( async (response) => {\n\n            this.other = (response as any).websocket;\n            this.other!.other = this;\n\n            this.readyState = this.OPEN;\n            this.dispatchEvent( new Event(\"open\") );\n            this.other!.dispatchEvent( new Event(\"open\") );\n\n        });\n\n\n    }\n\n    close(code?: number, reason?: string): void {\n        this.readyState = this.CLOSED;\n        let event: CloseEventInit = {};\n        if( code !== undefined)\n            event.code = code;\n        if( reason !== undefined)\n            event.reason = reason;\n\n        this.other!.dispatchEvent( new CloseEvent(\"close\", event) );\n        this.dispatchEvent( new CloseEvent(\"close\", event) );\n    }\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void {\n        this.other!.dispatchEvent(new MessageEvent(\"message\", {data}));\n    }\n\n    url: string = \"\";\n    \n    onclose  : ((this: WebSocket, ev: CloseEvent  ) => any) | null = null;\n    onerror  : ((this: WebSocket, ev: Event       ) => any) | null = null;\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null = null;\n    onopen   : ((this: WebSocket, ev: Event       ) => any) | null = null;\n\n    readyState: number = 0;\n\n    readonly CONNECTING = 0;\n    readonly OPEN       = 1;\n    readonly CLOSING    = 2;\n    readonly CLOSED     = 3;\n\n    // not implemented\n    binaryType: BinaryType = \"arraybuffer\";\n    bufferedAmount: number = 0;\n    extensions: string     = \"\";\n    protocol: string       = \"\";\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export {getFakeEventSource} from \"./Fake/EventSource\";\nexport {getFakeWebSocket}   from \"./Fake/WebSocket\";"],"names":["EventSource","globalThis","getFakeEventSource","use_server","EventSourceServer","constructor","url","EventSourceFake","EventTarget","fetch","then","response","readyState","OPEN","dispatchEvent","Event","reader","body","pipeThrough","TextDecoderStream","getReader","buffer","chunk","read","done","value","pos","indexOf","event","slice","data","Object","fromEntries","split","map","l","MessageEvent","onerror","onmessage","onopen","close","CLOSED","CONNECTING","withCredentials","WebSocket","getFakeWebSocket","WebSocketServer","WebSocketFake","Deno","upgradeWebSocket","request","socket","Response","websocket","other","code","reason","undefined","CloseEvent","send","onclose","CLOSING","binaryType","bufferedAmount","extensions","protocol"],"sourceRoot":""}