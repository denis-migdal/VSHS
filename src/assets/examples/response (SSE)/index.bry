#  /response (SSE)/GET.bry

from browser import self
from browser import aio


class SSEWriter:
    def __init__(this, writer):
        this._writer = writer

    def sendEvent(this, data, name = 'message'):
        return this._writer.write(
            f"event: {name}\n"
            f"data: {self.JSON.stringify(data)}\n\n")

async def callback(writer):

    try:
        def onClose():
            print("connexion closed")

        writer.closed["finally"](onClose)

        sse = SSEWriter(writer)

        for i in range(0,3):
            await sse.sendEvent({"i": i})

        writer.close()

    except Exception as e:
        print(f"Error: {e}")
        writer.abort();

async def RequestHandler(request, _):
    
    t = self.TransformStream.new()

    aio.run( callback(t.writable.getWriter()) )

    encoder = self.TextEncoderStream.new()
    stream = t.readable.pipeThrough(encoder)
    return self.Response.new(stream,{
        "headers": {
            "Content-Type": "text/event-stream"
        }
    });